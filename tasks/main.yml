---
- name: install software
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ dns_packages[ansible_distribution ~ '-' ~ ansible_distribution_major_version]
      | default(dns_packages[ansible_distribution]
      | default(dns_packages['default'] )) }}"

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ dns_zonesdir[ansible_distribution] | default(dns_zonesdir['default'] ) }}"
    - "{{ dns_confdir[ansible_distribution] | default(dns_confdir['default'] ) }}"

- name: create group
  group:
    name: "{{ dns_group[ansible_distribution] | default(dns_group['default'] ) }}"

- name: create user
  user:
    name: "{{ dns_owner[ansible_distribution] | default(dns_owner['default'] ) }}"
    system: yes

- name: generate rndc key
  command: rndc-confgen -a -c "{{ dns_confdir[ansible_distribution] | default(dns_confdir['default'] ) }}/rndc.key"
  args:
    creates: "{{ dns_confdir[ansible_distribution] | default(dns_confdir['default'] ) }}/rndc.key"

- name: set permissions on rndc key file
  file:
    path: "{{ dns_confdir[ansible_distribution] | default(dns_confdir['default'] ) }}/rndc.key"
    owner: "{{ dns_owner[ansible_distribution] | default(dns_owner['default'] ) }}"
    group: "{{ dns_group[ansible_distribution] | default(dns_group['default'] ) }}"

- name: get most recent version of the hints/root file
  get_url:
    url: https://www.internic.net/domain/named.root
    dest: "{{ dns_zonesdir[ansible_distribution] | default(dns_zonesdir['default'] ) }}/named.root"
  when:
    - dns_caching_dns == true
  notify:
    reload zones
  register: result
  retries: 3
  until: not result|succeeded

- name: create zone files
  template:
    src: templates/zone.j2
    dest: "{{ dns_zonesdir[ansible_distribution] | default(dns_zonesdir['default'] ) }}/{{ item.name }}.conf"
  with_items:
    - "{{ dns_zones }}"
  notify:
    reload zones

- name: add zones to configuration
  template:
    src: templates/named.conf.j2
    dest: "{{ dns_confdir[ansible_distribution] | default(dns_confdir['default'] ) }}/named.conf"
  notify:
    reload configuration

- name: start and enable software
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - "{{ dns_services[ansible_distribution ~ '-' ~ ansible_distribution_major_version]
          | default(dns_services[ansible_distribution]
          | default(dns_services['default'] )) }}"
  when:
    - ansible_virtualization_type != "docker"
